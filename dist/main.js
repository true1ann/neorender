window.nr=class{static components={};static mountedComponents={};static version="NeoRender Sr1";static verNum=1;static lastError=null;static lastWarn=null;static errorEvent(t){const e=t instanceof Error?t.message:t,n=t instanceof Error?t.stack:null;this.lastError=e;const r={message:this.lastError,stack:n},o=new CustomEvent("neoRenderError",{detail:r});window.dispatchEvent(o)}static warnEvent(t){this.lastWarn=t;const e=new CustomEvent("neoRenderWarn",{detail:this.lastWarn});window.dispatchEvent(e)}static defineComponent(t){try{return t.name&&t.template?(this.components[t.name]=t,!0):(this.errorEvent(new Error("Components must have a name and an HTML template.")),!1)}catch(t){return this.errorEvent(t),!1}}static returnComponent(t,e){try{const n=this.components[t];if(!n)return this.errorEvent(new Error(`Component ${t} is not defined.`)),!1;const r=document.createElement("div"),o=r.attachShadow({mode:"open"});if(o.innerHTML=n.template,n.scopedStyles){const t=document.createElement("style");t.textContent=n.scopedStyles,o.appendChild(t)}return"function"==typeof n.beforeCreate&&n.beforeCreate(o,e),"function"==typeof n.main&&n.main(o,e),"function"==typeof n.afterCreate&&n.afterCreate(o,e),r}catch(t){return this.errorEvent(t),!1}}static async mount(t,e,n){try{if(!this.components[t])return this.errorEvent(new Error(`Component ${t} is not defined.`)),!1;const r=document.querySelector(e);return r?this.mountedComponents[e]?this.mountedComponents[e]===t?(this.warnEvent(`Component ${this.mountedComponents[e]} is already mounted to ${e}`),!0):(this.errorEvent(new Error(`Element ${e} already has a component mounted to it: ${this.mountedComponents[e]}`)),!1):(r.appendChild(await this.returnComponent(t,n)),this.mountedComponents[e]=t,!0):(this.errorEvent(new Error(`Element ${r} is not found.`)),!1)}catch(t){return this.errorEvent(t),!1}}static remount(t,e){try{return document.querySelector(t).innerHTML="",this.mount(e||this.mountedComponents[t],t)}catch(t){return this.errorEvent(t),!1}}static async unmount(t){try{const e=this.mountedComponents[t];if(e){const n=this.components[e];return"function"==typeof n.beforeDelete&&await n.beforeDelete.call(null),document.querySelector(t).innerHTML="",delete this.mountedComponents[t],!0}return this.warnEvent(`Tried to unmount NR from ${t}, but nothing was mounted to it.`),!0}catch(t){return this.errorEvent(t),!1}}static async scriptMount(t,e){try{const n=document.currentScript;if(!n)return this.errorEvent(new Error("scriptMount is NOT meant to be executed in script, or console. use mount/returnComponent instead.")),!1;const r=await this.returnComponent(t,e);n.parentNode.replaceChild(r,n)}catch(t){this.errorEvent(t)}}};